{/* Below code is of serching sorting input boxes */}
 <div className="row align-items-start   ">
            <label htmlFor="searchInput" >Search:</label>
            <input type="text" id="searchInput" className="form-control" 
            placeholder="Enter Name, User Id, or Email" onChange={event => { setSearchTerm(event.target.value) }} />
            <br/>
          {/* </div> */}

          {/* <div className="d-flex align-items-center mx-4"> */}
            <label htmlFor="pageSizeInput col" >Page Size:</label>
            <input type='number' id="pageSizeInput" className="form-control col" value={pageSize} placeholder='Enter page size' onChange={(e) => {
              const pageSize = parseInt(e.target.value.trim());
              if (pageSize > 0 && pageSize <= postContent.totalElements) {
                setPageSize(pageSize);
              } else {
                if (pageSize === ' ') {
                  setPageSize('');
                } else {
                  setPageSize('');
                  alert("Enter Valid Page Size")
                }
              }
            }} />
          {/* </div> */}
          {/* </div>

  <div className="col-md-6"> */}
          {/* <div className="d-flex align-items-center mx-4"> */}
            {/* <label htmlFor="sortBySelect" >Sort By:</label>
            <select id="sortBySelect" className="form-control" value={sortBy} onChange={(e) => setSortBy(e.target.value)}>
              <option value="userId">User Id</option>
              <option value="name">Name</option>
              <option value="email">Email</option>
              <option value="mobile">Mobile</option>
              <option value="dob">DOB</option>
              <option value="active">Active</option>
              <option value="gender">Gender</option>
              <option value="bloodGroup">Blood Group</option>
              <option value="dateOfJoining">Date of Joining</option>
            </select> */}
          {/* </div> */}

          {/* <div className="d-flex align-items-center mx-2"> */}
            <label htmlFor="sortDirSelect" >Sort Direction:</label>
            <button className="btn btn-link" onClick={() => handleSortChange('asc')}>
            <i class="bi bi-sort-up fa-2x" onClick={() => handleSortChange('asc')}> </i> {/* Use the appropriate class for the up arrow icon */}
            </button>
            <button className="btn btn-link" onClick={() => handleSortChange('desc')}>
              <i className="bi bi-sort-down-alt fa-2x" onClick={() => handleSortChange('desc')}></i> {/* Use the appropriate class for the down arrow icon */}
            </button>
            {/* <select id="sortDirSelect" className="form-control" value={sortDir} onChange={(e) => handleSortChange(e)}>
              <option value="asc">Ascending</option>
              <option value="desc">Descending</option>
            </select> */}
          {/* </div> */}

          {/* <div className="d-flex align-items-center"> */}
            {/* <button className='btn btn-primary' onClick={() => handlePageChange()}>Sort</button> */}
          </div>
        </div>
      </div>


{/*Below code is for pageSize onchange */}
  const handlePageSize=(e)=>{
    const pageSize = parseInt(e.trim());
    if (pageSize > 0 && pageSize <= postContent.totalElements) {
      setPageSize(pageSize);
    } else {
      if (pageSize === ' ') {
        setPageSize(5);
      } else {
        setPageSize('');
        alert("Enter Valid Page Size");
      }
    }
    handlePageChange();
  }